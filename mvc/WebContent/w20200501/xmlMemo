+ XML : eXtensible Markup Language
		- 뭐든지 tag로 만들어 쓸 수 있는 언어
ex) 
<학생>
	<학번>2020</학번>
	<이름>홍길동</이름>
</학생>

cf) xml 요즘 잘 안씀 ==> JSON
 - 많은 프레임워크들이 환경설정용으로 많이 사용함
 
>특징
1. 시작태그와 종료태그가 있어야 함
2. 첫 시작
	<? xml version = "1.0" encoding="UTF-8" ?>
3. 모든 요소들은 대소문자를 구분함
4. 각 요소(엘리먼트) 사용 : <요소명>요소내용</요소명>
						ex) <age>20</age>
5. 값이 없다면 빈 요소를 가질 수 있음
	ex) <age></age>
6. 최상위 엘리먼트는 반드시 하나만 가질 수 있다
7. 태그를 겹쳐서 쓰는것은 허용되지 않는다.
	ex) <gender><phone></gender></phone>
8. 요소명은 xml 이름 지정 규칙을 따라야 함.

- [이름 지정 규척]
 1) xml로 시작하면 안됨
 2) 첫글자는 문자 혹은 _만 허옹되어 있다
 3) 요소명 공백 x
 	ex) <big data></big data> (X)
 4) 예약어 x
 5) 속성은 속성값을 가져야 한다. cf) 공백 속성은 허용
 	ex) <student sid="std"> </student>
 	
> DTD 규칙
 - DTD(Document Type Definition)
 : 회사 내부 및 기업간 동일한 분야(ex. 전자상거래)에 관심이 있는 여러 단체에서 문서를 주고받을 때 
 	통일시킬 목적으로 나름의 마크업 언어를 xml로 개발하여 사용하는 경우, 그 구조를 정의하는것
 ex) IE라는 프로그램은 HTML문서의 구조(DTD)에 정의되어 있는 방법으로 해석하도록 되어있는 응용 프로그램  	
 	
 - [DTD 규칙]
>> 사용 횟수
 1) + : 1개 이상
 2) * : 0개 이상
 3) ? : 0 or 1개
 
>> 속성 정의
 1) A | B 	: A 또는 B 둘중에 하나만 가능
 2) ()		: 요소를 그룹으로 선선해서 사용
 3) ID		: 유일한 식별자 -> 중복X
 4) #REQUIRED : 필수항목
 5) CDATA	: 문자열
 6) #FIXED	: 고정된 값
 7) #PCDATA : parsed character >> xml이 읽을 수 있는 문자
 ... 
 
 	
 	
 	
 	
 	
